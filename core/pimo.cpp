/*
 * This file has been generated by the onto2vocabularyclass tool
 * copyright (C) 2007-2008 Sebastian Trueg <trueg@kde.org>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

#include "pimo.h"

class PimoPrivate
{
public:
    PimoPrivate()
        : pimo_namespace( QUrl::fromEncoded( "http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#", QUrl::StrictMode ) ),
          pimo_Thing( QUrl::fromEncoded( "http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#Thing", QUrl::StrictMode ) ),
          pimo_groundingOccurrence( QUrl::fromEncoded( "http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#groundingOccurrence", QUrl::StrictMode ) ),
          pimo_occurrence( QUrl::fromEncoded( "http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#occurrence", QUrl::StrictMode ) ),
          pimo_referencingOccurrence( QUrl::fromEncoded( "http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#referencingOccurrence", QUrl::StrictMode ) ) {
    }

    QUrl pimo_namespace;
    QUrl pimo_Thing;
    QUrl pimo_groundingOccurrence;
    QUrl pimo_occurrence;
    QUrl pimo_referencingOccurrence;
};

Q_GLOBAL_STATIC( PimoPrivate, s_pimo )

QUrl Nepomuk::Vocabulary::PIMO::pimoNamespace()
{
    return s_pimo()->pimo_namespace;
}

QUrl Nepomuk::Vocabulary::PIMO::Thing()
{
    return s_pimo()->pimo_Thing;
}

QUrl Nepomuk::Vocabulary::PIMO::groundingOccurrence()
{
    return s_pimo()->pimo_groundingOccurrence;
}

QUrl Nepomuk::Vocabulary::PIMO::occurrence()
{
    return s_pimo()->pimo_occurrence;
}

QUrl Nepomuk::Vocabulary::PIMO::referencingOccurrence()
{
    return s_pimo()->pimo_referencingOccurrence;
}
